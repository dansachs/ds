"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RESERVED_KEYS = exports.ERROR_SEVERITY = exports.ERROR_STATUS = exports.CONSTANTS = void 0;
const ROOT_PATH = "/doc/root";
exports.CONSTANTS = {
    ROOT_PATH,
    ALL_QUERY: "**/*",
    DENDRON_WS_NAME: "dendron.code-workspace",
    DENDRON_SERVER_PORT: ".dendron.port",
    DENDRON_WS_META: ".dendron.ws",
    DENDRON_CONFIG_FILE: "dendron.yml",
    DENDRON_SEED_CONFIG: "seed.yml",
    DENDRON_DELIMETER: "dendron://",
    DENDRON_USER_FILE: ".dendron.user",
    DENDRON_CACHE_FILE: ".dendron.cache.json",
    DENDRON_ID: ".dendron.uuid",
    DENDRON_NO_TELEMETRY: ".dendron.no-telemetry",
    DENDRON_TELEMETRY: ".dendron.telemetry",
    DENDRON_HOOKS_BASE: "hooks",
    DENDRON_LOCAL_SITE_PORT: 8080,
    /**
     * Initial version for first installaion
     */
    DENDRON_INIT_VERSION: "0.0.0",
};
var ERROR_STATUS;
(function (ERROR_STATUS) {
    ERROR_STATUS["NODE_EXISTS"] = "node_exists";
    ERROR_STATUS["NO_SCHEMA_FOUND"] = "no_schema_found";
    ERROR_STATUS["NO_ROOT_SCHEMA_FOUND"] = "no_root_schema_found";
    ERROR_STATUS["MISSING_SCHEMA"] = "missing_schema";
    ERROR_STATUS["NO_ROOT_NOTE_FOUND"] = "no_root_note_found";
    ERROR_STATUS["BAD_PARSE_FOR_SCHEMA"] = "bad_parse_for_schema";
    ERROR_STATUS["NO_PARENT_FOR_NOTE"] = "no_parent_for_note";
    ERROR_STATUS["CANT_DELETE_ROOT"] = "no_delete_root_node";
    // --- 400, client errors
    // Bucket
    ERROR_STATUS["BAD_PARSE_FOR_NOTE"] = "bad_parse_for_note";
    ERROR_STATUS["ENGINE_NOT_SET"] = "no_engine_set";
    // 401
    ERROR_STATUS["NOT_AUTHORIZED"] = "not_authorized";
    // 402
    ERROR_STATUS["DOES_NOT_EXIST"] = "does_not_exist_error";
    ERROR_STATUS["INVALID_CONFIG"] = "invalid_config";
    ERROR_STATUS["INVALID_STATE"] = "invalid_state";
    // --- 500
    ERROR_STATUS["UNKNOWN"] = "unknown";
})(ERROR_STATUS = exports.ERROR_STATUS || (exports.ERROR_STATUS = {}));
/**
 * Labels whether error is recoverable or not
 */
var ERROR_SEVERITY;
(function (ERROR_SEVERITY) {
    ERROR_SEVERITY["MINOR"] = "minor";
    ERROR_SEVERITY["FATAL"] = "fatal";
})(ERROR_SEVERITY = exports.ERROR_SEVERITY || (exports.ERROR_SEVERITY = {}));
var RESERVED_KEYS;
(function (RESERVED_KEYS) {
    RESERVED_KEYS["GIT_NOTE_PATH"] = "gitNotePath";
    RESERVED_KEYS["GIT_NO_LINK"] = "gitNoLink";
})(RESERVED_KEYS = exports.RESERVED_KEYS || (exports.RESERVED_KEYS = {}));
//# sourceMappingURL=constants.js.map