"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.noteRouter = void 0;
const common_all_1 = require("@dendronhq/common-all");
const common_server_1 = require("@dendronhq/common-server");
const express_1 = require("express");
const core_1 = require("../core");
const notes_1 = require("../modules/notes");
const utils_1 = require("../utils");
const router = express_1.Router();
exports.noteRouter = router;
const L = core_1.getLogger();
router.post("/delete", async (req, res) => {
    const { ws, id, opts } = req.body;
    const engine = await utils_1.getWS({ ws: ws || "" });
    const { error, data } = await engine.deleteNote(id, opts);
    res.json({ error, data });
});
router.post("/getByPath", async (req, res) => {
    const { ws, ...opts } = req.body;
    const engine = await utils_1.getWS({ ws: ws || "" });
    const resp = await engine.getNoteByPath(opts);
    res.json(resp);
});
router.get("/info", async (_req, res) => {
    const resp = await notes_1.NoteController.instance().info();
    res.json(resp);
});
router.post("/rename", async (req, res) => {
    const resp = await notes_1.NoteController.instance().rename(req.body);
    if (resp.error) {
        res.status(400).json({ error: resp.error });
    }
    else {
        res.json(resp);
    }
});
router.post("/render", async (req, res) => {
    const resp = await notes_1.NoteController.instance().render(req.body);
    if (resp.error) {
        res.status(400).json({ error: common_all_1.error2PlainObject(resp.error) });
    }
    else {
        res.json(resp);
    }
});
router.get("/query", async (req, res) => {
    const resp = await notes_1.NoteController.instance().query(req.query);
    res.json(resp);
});
router.post("/update", async (req, res) => {
    const ctx = "router:note:update";
    const resp = await notes_1.NoteController.instance().update(req.body);
    L.debug({ ctx, msg: "exit", payload: req.body });
    res.json(resp);
});
router.post("/write", async (req, res) => {
    const { ws, node, opts } = req.body;
    const engine = await utils_1.getWS({ ws: ws || "" });
    try {
        const out = await engine.writeNote(node, opts);
        if (!common_server_1.ExpressUtils.handleError(res, out)) {
            res.json(out);
        }
    }
    catch (err) {
        common_server_1.ExpressUtils.handleError(res, {
            error: common_all_1.DendronError.createPlainError({
                message: err.message,
                payload: common_all_1.stringifyError(err),
            }),
        });
    }
});
router.post("/bulkAdd", async (req, res) => {
    const { ws, opts } = req.body;
    const engine = await utils_1.getWS({ ws: ws || "" });
    try {
        const out = await engine.bulkAddNotes(opts);
        res.json(out);
    }
    catch (err) {
        res.json({
            error: new common_all_1.DendronError({ message: JSON.stringify(err) }),
            data: [],
        });
    }
});
//# sourceMappingURL=note.js.map