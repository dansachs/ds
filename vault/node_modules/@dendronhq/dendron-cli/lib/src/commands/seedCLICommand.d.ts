import { DendronError, SeedCommands, SeedConfig } from "@dendronhq/common-all";
import { SeedInitMode } from "@dendronhq/engine-server";
import yargs from "yargs";
import { CLICommand } from "./base";
import { SetupEngineOpts } from "./utils";
declare type CommandCLIOpts = {
    wsRoot: string;
    vault?: string;
    cmd: SeedCommands;
    id?: string;
    mode?: SeedInitMode;
    config?: SeedConfig;
    registryFile?: string;
};
declare type CommandOpts = CommandCLIOpts & SetupEngineOpts & {};
declare type CommandOutput = Partial<{
    error: DendronError;
    data: any;
}>;
export { CommandOpts as SeedCLICommandOpts };
export declare class SeedCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<{
        data: {} | undefined;
        error?: undefined;
    } | {
        error: any;
        data?: undefined;
    }>;
}
