"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportPodCLICommand = void 0;
const pods_core_1 = require("@dendronhq/pods-core");
const base_1 = require("./base");
const pod_1 = require("./pod");
const utils_1 = require("./utils");
class ImportPodCLICommand extends base_1.CLICommand {
    constructor() {
        super({
            name: "importPod",
            desc: "use a pod to import notes",
        });
    }
    buildArgs(args) {
        super.buildArgs(args);
        utils_1.setupEngineArgs(args);
        pod_1.setupPodArgs(args);
    }
    async enrichArgs(args) {
        return pod_1.enrichPodArgs({ pods: pods_core_1.getAllImportPods(), podType: "import" })(args);
    }
    async execute(opts) {
        const { podClass: PodClass, config, wsRoot, engine, server } = opts;
        const vaults = engine.vaults;
        const pod = new PodClass();
        console.log("running pod...", config);
        await pod.execute({ wsRoot, config, engine, vaults });
        server.close((err) => {
            if (err) {
                this.L.error({ msg: "error closing", payload: err });
            }
        });
        console.log("done");
    }
}
exports.ImportPodCLICommand = ImportPodCLICommand;
//# sourceMappingURL=importPod.js.map