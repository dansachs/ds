import yargs from "yargs";
import { CLICommand } from "./base";
import { SetupEngineResp } from "./utils";
declare type CommandCLIOpts = {
    wsRoot: string;
    vault?: string;
    enginePort?: number;
    query?: string;
    cmd: NoteCommands;
};
declare type CommandOpts = CommandCLIOpts & SetupEngineResp & {};
declare type CommandOutput = any;
export declare enum NoteCommands {
    LOOKUP = "lookup",
    DELETE = "delete"
}
export { CommandOpts as NoteCLICommandOpts };
export declare class NoteCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<Required<import("@dendronhq/common-all").RespV2<import("@dendronhq/common-all").EngineDeleteNotePayload>> | import("@dendronhq/common-all").GetNotePayload | undefined>;
}
