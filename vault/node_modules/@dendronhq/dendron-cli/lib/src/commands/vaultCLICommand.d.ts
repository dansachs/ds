import yargs from "yargs";
import { CLICommand } from "./base";
import { SetupEngineResp } from "./utils";
declare type CommandCLIOpts = {
    wsRoot: string;
    vault?: string;
    enginePort?: number;
    vaultPath: string;
    noAddToConfig?: boolean;
    cmd: VaultCommands;
};
declare type CommandOpts = CommandCLIOpts & SetupEngineResp & {};
declare type CommandOutput = any;
export declare enum VaultCommands {
    CREATE = "create"
}
export { CommandOpts as VaultCLICommandOpts };
export declare class VaultCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<void>;
}
