import yargs from "yargs";
import { CLICommand } from "./base";
import { SetupEngineResp } from "./utils";
declare type CommandCLIOpts = {
    wsRoot: string;
    vault?: string;
    enginePort?: number;
    cmd: WorkspaceCommands;
};
declare type CommandOpts = CommandCLIOpts & SetupEngineResp & {};
declare type CommandOutput = any;
export declare enum WorkspaceCommands {
    PULL = "pull",
    PUSH = "push",
    ADD_AND_COMMIT = "addAndCommit",
    SYNC = "sync",
    REMOVE_CACHE = "removeCache"
}
export { CommandOpts as WorkspaceCLICommandOpts };
export declare class WorkspaceCLICommand extends CLICommand<CommandOpts, CommandOutput> {
    constructor();
    buildArgs(args: yargs.Argv): void;
    enrichArgs(args: CommandCLIOpts): Promise<CommandOpts>;
    execute(opts: CommandOpts): Promise<void>;
}
