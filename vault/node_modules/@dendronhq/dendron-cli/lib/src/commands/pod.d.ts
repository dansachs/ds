import { PodClassEntryV4, PodKind } from "@dendronhq/pods-core";
import yargs from "yargs";
import { SetupEngineCLIOpts, SetupEngineResp } from "./utils";
export declare type PodCLIOpts = {
    podId: string;
    showConfig?: boolean;
    genConfig?: boolean;
    podSource: PodSource;
    podPkg?: string;
    config?: string;
};
export declare type PodCommandCLIOpts = {} & SetupEngineCLIOpts & PodCLIOpts;
export declare type PodCommandOpts<T = any> = PodCLIOpts & {
    podClass: any;
    config: T;
} & SetupEngineResp & SetupEngineCLIOpts;
export declare function fetchPodClassV4(podId: string, opts: {
    podSource: PodSource;
    pods?: PodClassEntryV4[];
    podPkg?: string;
    wsRoot?: string;
    podType: PodKind;
}): PodClassEntryV4;
export declare function setupPodArgs(args: yargs.Argv): void;
export declare const enrichPodArgs: (opts: {
    pods: PodClassEntryV4[];
    podType: PodKind;
}) => (args: PodCommandCLIOpts) => Promise<PodCommandOpts>;
export declare const executePod: (opts: PodCommandOpts) => Promise<void>;
export declare enum PodSource {
    CUSTOM = "custom",
    BUILTIN = "builtin"
}
