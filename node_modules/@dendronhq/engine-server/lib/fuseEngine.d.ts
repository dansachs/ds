import { DEngineMode, DVault, NotePropsDict, NoteProps, SchemaModuleDict, SchemaModuleProps, SchemaProps } from "@dendronhq/common-all";
import Fuse from "fuse.js";
export declare type NoteIndexProps = {
    id: string;
    title: string;
    fname: string;
    vault: DVault;
};
declare type FuseEngineOpts = {
    mode?: DEngineMode;
};
export declare class FuseEngine {
    notesIndex: Fuse<NoteIndexProps>;
    schemaIndex: Fuse<SchemaProps>;
    constructor(opts: FuseEngineOpts);
    querySchema({ qs }: {
        qs: string;
    }): Promise<SchemaProps[]>;
    /**
     * If qs = "", return root note
     * @param param0
     * @returns
     */
    queryNote({ qs }: {
        qs: string;
    }): NoteIndexProps[];
    updateSchemaIndex(schemas: SchemaModuleDict): Promise<void>;
    updateNotesIndex(notes: NotePropsDict): Promise<void>;
    removeNoteFromIndex(note: NoteProps): Promise<void>;
    removeSchemaFromIndex(smod: SchemaModuleProps): Promise<void>;
}
export {};
